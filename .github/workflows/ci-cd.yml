name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # 仅在 master 分支有变更时触发
  workflow_dispatch:  # 手动触发支持

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 确保 gradlew 可执行
      - name: Set execution permissions for gradlew
        run: chmod +x gradlew

      # Step 3: 设置 JDK 环境
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 23
          distribution: 'temurin'

      # Step 4: 安装 Docker Compose
      - name: Cache Docker Compose
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/docker-compose
          key: docker-compose-${{ runner.os }}-${{ hashFiles('docker-compose-version') }}
          restore-keys: |
            docker-compose-${{ runner.os }}-

      - name: Install Docker Compose if not cached
        if: !steps.cache.outputs.cache-hit
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 5: 清理并构建项目
      - name: Build with Gradle
        run: ./gradlew clean build

      # Step 6: Docker 登录阿里云镜像仓库
      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" crpi-1xu2w221z7lgelkx.cn-shenzhen.personal.cr.aliyuncs.com --password-stdin --quiet

      # Step 7: 构建并推送 Docker 镜像
      - name: Build and Push Docker Image
        run: |
          docker-compose build
          docker-compose push

      # Step 8: 使用 SSH 部署到服务器
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd /root/gpt-chat-server
            chmod +x deploy.sh  # 添加这一行确保 deploy.sh 有执行权限
            ./deploy.sh
